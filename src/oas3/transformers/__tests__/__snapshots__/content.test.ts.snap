// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`translateHeaderObject should translate to IHttpHeaderParam 1`] = `
Object {
  "allowEmptyValue": true,
  "allowReserved": true,
  "content": Object {},
  "deprecated": true,
  "description": "descr",
  "encodings": Array [],
  "examples": Array [
    Object {
      "key": "a",
      "summary": "example summary",
      "value": "hey",
    },
    Object {
      "key": "__default",
      "value": Object {},
    },
  ],
  "explode": true,
  "name": "header-name",
  "required": true,
  "schema": Object {
    "$schema": "http://json-schema.org/draft-07/schema#",
  },
  "style": "simple",
}
`;

exports[`translateMediaTypeObject given complex nested media type object should translate correctly 1`] = `
Object {
  "encodings": Array [
    Object {
      "headers": Array [
        Object {
          "content": Object {
            "nested/media": Object {},
          },
          "description": "descr",
          "encodings": Array [],
          "examples": Array [
            Object {
              "key": "a",
              "summary": "example summary",
              "value": "hey",
            },
          ],
          "name": "h1",
          "style": "simple",
        },
      ],
      "mediaType": "text/plain",
      "property": "enc1",
      "style": "form",
    },
  ],
  "examples": Array [
    Object {
      "key": "example",
      "summary": "multi example",
      "value": "hey",
    },
  ],
  "mediaType": "mediaType",
  "schema": Object {
    "$schema": "http://json-schema.org/draft-07/schema#",
  },
}
`;

exports[`translateMediaTypeObject given encodings should translate each encoding to array item 1`] = `
Object {
  "encodings": Array [
    Object {
      "allowReserved": true,
      "explode": true,
      "headers": Array [
        Object {
          "encodings": Array [],
          "examples": Array [],
          "name": "h1",
          "style": "simple",
        },
      ],
      "mediaType": "text/plain",
      "property": "enc1",
      "style": "form",
    },
    Object {
      "allowReserved": true,
      "explode": true,
      "headers": Array [
        Object {
          "encodings": Array [],
          "examples": Array [],
          "name": "h1",
          "style": "simple",
        },
      ],
      "mediaType": "text/plain",
      "property": "enc2",
      "style": "form",
    },
  ],
  "examples": Array [
    Object {
      "key": "example",
      "summary": "multi example",
      "value": "hey",
    },
  ],
  "mediaType": "mediaType",
  "schema": Object {
    "$schema": "http://json-schema.org/draft-07/schema#",
  },
}
`;

exports[`translateMediaTypeObject given multiple examples should translate to IHttpContent 1`] = `
Object {
  "encodings": Array [],
  "examples": Array [
    Object {
      "key": "example",
      "summary": "multi example",
      "value": "hey",
    },
  ],
  "mediaType": "mediaType",
  "schema": Object {
    "$schema": "http://json-schema.org/draft-07/schema#",
  },
}
`;

exports[`translateMediaTypeObject given single example should translate to IHttpContent 1`] = `
Object {
  "encodings": Array [],
  "examples": Array [
    Object {
      "key": "default",
      "value": "hey",
    },
  ],
  "mediaType": "mediaType",
  "schema": Object {
    "$schema": "http://json-schema.org/draft-07/schema#",
  },
}
`;

exports[`translateMediaTypeObject should skip nullish headers 1`] = `
Object {
  "encodings": Array [
    Object {
      "headers": Array [],
      "mediaType": "text/plain",
      "property": "enc1",
      "style": "form",
    },
  ],
  "examples": Array [
    Object {
      "key": "example",
      "summary": "multi example",
      "value": "hey",
    },
  ],
  "mediaType": "mediaType",
  "schema": Object {
    "$schema": "http://json-schema.org/draft-07/schema#",
  },
}
`;
